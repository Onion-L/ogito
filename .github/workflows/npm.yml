name: NPM Release

on:
  push:
    branches: ['main']
    # tags:
    #   - 'v*'

jobs:
  build-binaries:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            npm-name: linux-x64
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            npm-name: linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            npm-name: darwin-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            npm-name: darwin-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            npm-name: win32-x64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            npm-name: win32-arm64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # - name: Install cross-compilation deps (Ubuntu only)
      #   if: matrix.os == 'ubuntu-22.04'
      #   run: |
      #     sudo dpkg --add-architecture arm64
      #     sudo apt-get update
      #     sudo apt-get install -y pkg-config gcc-aarch64-linux-gnu libssl-dev:arm64

      # - name: Set cross env vars
      #   if: matrix.os == 'ubuntu-22.04'
      #   run: echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

  #     - name: Package
  #       run: |
  #         tar -czf ogito-${{ matrix.npm-name }}.tar.gz -C target/${{ matrix.target }}/release ogito*

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: binaries
  #         path: ogito-*.tar.gz

  # publish-platform-packages:
  #   needs: build-binaries
  #   runs-on: ubuntu-22.04

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: binaries
  #         path: .

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         registry-url: 'https://registry.npmjs.org'

  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile

  #     - name: Generate platform packages
  #       run: pnpm run script

  # - name: Publish platform packages
  #   env:
  #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  #   run: pnpm -r --filter "@ogito/*" publish --access public --no-git-checks

  # publish-main-package:
  #   needs: publish-platform-packages
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         registry-url: 'https://registry.npmjs.org'

  #     - name: Install dependencies
  #       run: pnpm install

  #     - name: Update version
  #       run: |
  #         VERSION=${GITHUB_REF#refs/tags/v}
  #         npm version --no-git-tag-version "$VERSION"

  #     - name: Build
  #       run: pnpm build

  #     - name: Publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  #       run: |
  #         cd dist
  #         npm publish
